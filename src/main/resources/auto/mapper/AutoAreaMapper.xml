<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jiaxuch.autocode.mapper.AutoAreaMapper">
  <resultMap id="BaseResultMap" type="com.jiaxuch.autocode.model.AutoArea">
    <id column="areaId" jdbcType="INTEGER" property="areaid" />
    <result column="areaCode" jdbcType="VARCHAR" property="areacode" />
    <result column="areaName" jdbcType="VARCHAR" property="areaname" />
    <result column="level" jdbcType="TINYINT" property="level" />
    <result column="cityCode" jdbcType="VARCHAR" property="citycode" />
    <result column="center" jdbcType="VARCHAR" property="center" />
    <result column="parentId" jdbcType="INTEGER" property="parentid" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    areaId, areaCode, areaName, level, cityCode, center, parentId
  </sql>
  <select id="selectByExample" parameterType="com.jiaxuch.autocode.example.AutoAreaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from T_Area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    'true' as QUERYID,
    <if test="example != null and example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from T_Area
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    <if test="example != null and example.rows != null">
      <if test="example.offset != null">
        limit ${example.offset}, ${example.rows}
      </if>
      <if test="example.offset == null">
        limit ${example.rows}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 'true' as QUERYID,
    <include refid="Base_Column_List" />
    from T_Area
    where areaId = #{areaid,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    select
    'true' as QUERYID,
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from T_Area
    where areaId = #{areaid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from T_Area
    where areaId = #{areaid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.jiaxuch.autocode.example.AutoAreaExample">
    delete from T_Area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jiaxuch.autocode.model.AutoArea">
    insert into T_Area (areaId, areaCode, areaName, 
      level, cityCode, center, 
      parentId)
    values (#{areaid,jdbcType=INTEGER}, #{areacode,jdbcType=VARCHAR}, #{areaname,jdbcType=VARCHAR}, 
      #{level,jdbcType=TINYINT}, #{citycode,jdbcType=VARCHAR}, #{center,jdbcType=VARCHAR}, 
      #{parentid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into T_Area
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.areaid != null">
            areaId,
          </if>
          <if test="record.areacode != null">
            areaCode,
          </if>
          <if test="record.areaname != null">
            areaName,
          </if>
          <if test="record.level != null">
            level,
          </if>
          <if test="record.citycode != null">
            cityCode,
          </if>
          <if test="record.center != null">
            center,
          </if>
          <if test="record.parentid != null">
            parentId,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.areaid != null">
            #{record.areaid,jdbcType=INTEGER},
          </if>
          <if test="record.areacode != null">
            #{record.areacode,jdbcType=VARCHAR},
          </if>
          <if test="record.areaname != null">
            #{record.areaname,jdbcType=VARCHAR},
          </if>
          <if test="record.level != null">
            #{record.level,jdbcType=TINYINT},
          </if>
          <if test="record.citycode != null">
            #{record.citycode,jdbcType=VARCHAR},
          </if>
          <if test="record.center != null">
            #{record.center,jdbcType=VARCHAR},
          </if>
          <if test="record.parentid != null">
            #{record.parentid,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.jiaxuch.autocode.example.AutoAreaExample" resultType="java.lang.Long">
    select count(*) from T_Area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update T_Area
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.areaid != null">
            areaId = #{record.areaid,jdbcType=INTEGER},
          </if>
          <if test="record.areacode != null">
            areaCode = #{record.areacode,jdbcType=VARCHAR},
          </if>
          <if test="record.areaname != null">
            areaName = #{record.areaname,jdbcType=VARCHAR},
          </if>
          <if test="record.level != null">
            level = #{record.level,jdbcType=TINYINT},
          </if>
          <if test="record.citycode != null">
            cityCode = #{record.citycode,jdbcType=VARCHAR},
          </if>
          <if test="record.center != null">
            center = #{record.center,jdbcType=VARCHAR},
          </if>
          <if test="record.parentid != null">
            parentId = #{record.parentid,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update T_Area
    set areaId = #{record.areaid,jdbcType=INTEGER},
      areaCode = #{record.areacode,jdbcType=VARCHAR},
      areaName = #{record.areaname,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=TINYINT},
      cityCode = #{record.citycode,jdbcType=VARCHAR},
      center = #{record.center,jdbcType=VARCHAR},
      parentId = #{record.parentid,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update T_Area
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.areacode != null">
            areaCode = #{record.areacode,jdbcType=VARCHAR},
          </if>
          <if test="record.areaname != null">
            areaName = #{record.areaname,jdbcType=VARCHAR},
          </if>
          <if test="record.level != null">
            level = #{record.level,jdbcType=TINYINT},
          </if>
          <if test="record.citycode != null">
            cityCode = #{record.citycode,jdbcType=VARCHAR},
          </if>
          <if test="record.center != null">
            center = #{record.center,jdbcType=VARCHAR},
          </if>
          <if test="record.parentid != null">
            parentId = #{record.parentid,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
    where areaId = #{record.areaid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jiaxuch.autocode.model.AutoArea">
    update T_Area
    set areaCode = #{areacode,jdbcType=VARCHAR},
      areaName = #{areaname,jdbcType=VARCHAR},
      level = #{level,jdbcType=TINYINT},
      cityCode = #{citycode,jdbcType=VARCHAR},
      center = #{center,jdbcType=VARCHAR},
      parentId = #{parentid,jdbcType=INTEGER}
    where areaId = #{areaid,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.jiaxuch.autocode.example.AutoAreaExample" resultMap="BaseResultMap">
    select
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from T_Area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    select
    'true' as QUERYID,
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.aliasedEscapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <include refid="Base_Column_List" />
      </otherwise>
    </choose>
    from T_Area
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example != null and example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into T_Area
    (areaId, areaCode, areaName, level, cityCode, center, parentId)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.areaid,jdbcType=INTEGER}, #{item.areacode,jdbcType=VARCHAR}, #{item.areaname,jdbcType=VARCHAR}, 
        #{item.level,jdbcType=TINYINT}, #{item.citycode,jdbcType=VARCHAR}, #{item.center,jdbcType=VARCHAR}, 
        #{item.parentid,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into T_Area (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'areaId'.toString() == column.value">
          #{item.areaid,jdbcType=INTEGER}
        </if>
        <if test="'areaCode'.toString() == column.value">
          #{item.areacode,jdbcType=VARCHAR}
        </if>
        <if test="'areaName'.toString() == column.value">
          #{item.areaname,jdbcType=VARCHAR}
        </if>
        <if test="'level'.toString() == column.value">
          #{item.level,jdbcType=TINYINT}
        </if>
        <if test="'cityCode'.toString() == column.value">
          #{item.citycode,jdbcType=VARCHAR}
        </if>
        <if test="'center'.toString() == column.value">
          #{item.center,jdbcType=VARCHAR}
        </if>
        <if test="'parentId'.toString() == column.value">
          #{item.parentid,jdbcType=INTEGER}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsertSelective" parameterType="map">
    insert into T_Area
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.areaid != null">
            areaId,
          </if>
          <if test="record.areacode != null">
            areaCode,
          </if>
          <if test="record.areaname != null">
            areaName,
          </if>
          <if test="record.level != null">
            level,
          </if>
          <if test="record.citycode != null">
            cityCode,
          </if>
          <if test="record.center != null">
            center,
          </if>
          <if test="record.parentid != null">
            parentId,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.areaid != null">
            #{record.areaid,jdbcType=INTEGER},
          </if>
          <if test="record.areacode != null">
            #{record.areacode,jdbcType=VARCHAR},
          </if>
          <if test="record.areaname != null">
            #{record.areaname,jdbcType=VARCHAR},
          </if>
          <if test="record.level != null">
            #{record.level,jdbcType=TINYINT},
          </if>
          <if test="record.citycode != null">
            #{record.citycode,jdbcType=VARCHAR},
          </if>
          <if test="record.center != null">
            #{record.center,jdbcType=VARCHAR},
          </if>
          <if test="record.parentid != null">
            #{record.parentid,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
    on duplicate key update 
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.areaid != null">
            areaId = #{record.areaid,jdbcType=INTEGER},
          </if>
          <if test="record.areacode != null">
            areaCode = #{record.areacode,jdbcType=VARCHAR},
          </if>
          <if test="record.areaname != null">
            areaName = #{record.areaname,jdbcType=VARCHAR},
          </if>
          <if test="record.level != null">
            level = #{record.level,jdbcType=TINYINT},
          </if>
          <if test="record.citycode != null">
            cityCode = #{record.citycode,jdbcType=VARCHAR},
          </if>
          <if test="record.center != null">
            center = #{record.center,jdbcType=VARCHAR},
          </if>
          <if test="record.parentid != null">
            parentId = #{record.parentid,jdbcType=INTEGER},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <insert id="upsert" parameterType="com.jiaxuch.autocode.model.AutoArea">
    insert into T_Area
    (areaId, areaCode, areaName, level, cityCode, center, parentId)
    values
    (#{areaid,jdbcType=INTEGER}, #{areacode,jdbcType=VARCHAR}, #{areaname,jdbcType=VARCHAR}, 
      #{level,jdbcType=TINYINT}, #{citycode,jdbcType=VARCHAR}, #{center,jdbcType=VARCHAR}, 
      #{parentid,jdbcType=INTEGER})
    on duplicate key update 
    areaId = #{areaid,jdbcType=INTEGER}, 
    areaCode = #{areacode,jdbcType=VARCHAR}, 
    areaName = #{areaname,jdbcType=VARCHAR}, 
    level = #{level,jdbcType=TINYINT}, 
    cityCode = #{citycode,jdbcType=VARCHAR}, 
    center = #{center,jdbcType=VARCHAR}, 
    parentId = #{parentid,jdbcType=INTEGER}
  </insert>
</mapper>